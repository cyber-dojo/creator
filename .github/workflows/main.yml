name: Main

on:
  push:
    branches:
      - main

env:
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  KOSLI_HOST_STAGING: https://staging.app.kosli.com
  KOSLI_HOST_PRODUCTION: https://app.kosli.com
  KOSLI_ORG: cyber-dojo
  KOSLI_FLOW: ${{ inputs.KOSLI_FLOW }}
  AWS_ACCOUNT_ID: 244531986313
  AWS_REGION: eu-central-1

jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.prep.outputs.image_tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Prepare
      id: prep
      run: |
        TAG=$(echo $GITHUB_SHA | head -c7)
        echo "image_tag=${TAG}" >> ${GITHUB_OUTPUT}

  build-test-push:
    needs: [pre-build]
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Setup Kosli CLI
        uses: kosli-dev/setup-cli-action@v2
        with:
          version:
            "2.6.8"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
            role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/gh_actions_snyk_scans
            aws-region: ${{ env.AWS_REGION }}
            role-duration-seconds: 2400
            role-session-name: ${{ github.event.repository.name }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
            
      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Get full history for Kosli commit-interval harvesting
          fetch-depth: 0

      - name: Build Test Publish
        run: 
          ./build_test_publish.sh
        

  # deploy-staging:
  #   needs: [pre-build, build-test-push]
  #   #uses: cyber-dojo/reusable-actions-workflows/.github/workflows/kosli_deploy.yml@v0.0.2
  #   permissions:
  #     id-token: write
  #     contents: write
  #   secrets:
  #     KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  #   with:
  #     AWS_ACCOUNT_ID: 244531986313
  #     AWS_REGION: eu-central-1
  #     cyber_dojo_env_name_aws: aws-beta
  #     environment_name: staging
  #     environment_url: https://beta.cyber-dojo.org
  #     gh_actions_iam_role_name: gh_actions_services
  #     kosli_host_production: https://app.kosli.com
  #     kosli_host_staging: https://staging.app.kosli.com
  #     tagged_image: 244531986313.dkr.ecr.eu-central-1.amazonaws.com/creator:${{ needs.pre-build.outputs.image_tag }}

  # deploy-prod:
  #   needs: [pre-build, build-test-push]
  #   uses: cyber-dojo/reusable-actions-workflows/.github/workflows/kosli_deploy.yml@v0.0.2
  #   permissions:
  #     id-token: write
  #     contents: write
  #   secrets:
  #     KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  #   with:
  #     AWS_ACCOUNT_ID: 274425519734
  #     AWS_REGION: eu-central-1
  #     cyber_dojo_env_name_aws: aws-prod
  #     environment_name: production
  #     environment_url: https://cyber-dojo.org
  #     gh_actions_iam_role_name: gh_actions_services
  #     kosli_host_production: https://app.kosli.com
  #     kosli_host_staging: https://staging.app.kosli.com
  #     tagged_image: 274425519734.dkr.ecr.eu-central-1.amazonaws.com/creator:${{ needs.pre-build.outputs.image_tag }}
