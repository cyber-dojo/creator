
qtest now allows you to have a long well-formatted test name.
What if you want several tests with this same test-name
but different ids? That sounds reasonable.
Consider too...
|POST /create_custom_group
|with a display_name in its request.body
|that exists in custom-start-points
|has status 200
is similar too...
10|POST /create_custom_group
20|with a display_name in its request.body
30|that exists in custom-start-points
40|has status 200
You could set up the test body like this...
steps = {
 10 => { ... },
 20 => { ... },
 30 => { ... },
 40 => { ... } 
}



When a runner.run call times out I should write a log message to stdout.
Then every so often I could just look at the log with kubectl command.

All creator server-side tests that create Stub exceptions from external
http-services. Stub these with something simple like '{"exception":42}'
and verify that the exception is simply propagated into the response.body
with status 500.

Add alive? ready? tests with non JSON-header

Hmmm. You might often add a debug-printf for this (see if the printf appears)
With sufficient state-setup control and ability to run single test you
don't need debug-printf! Just see if the line was covered.

Refactor id58_test_base in creator so 5 slowest tests are printed one per line.
Only use \n terminated sections when defining the test so that appears when test fails.

Rework yml so
s/creator-client/client/
s/creator-server/creator/
This way nginx.conf (eg) has settings it will actually need in real nginx.
Will affect .sh files.

Drop attempt to distinguish between 400/500 error codes.
It's not useful.
Just return 500 and make sure 'exception' key is in the json response body
(and is also logged to stdout)

Add examples of 500 calls (and the exception) to sh/api_demo.sh

Can test (manually) in custom-chooser by [docker rm]ing
the saver service before clicking the [ok] button.
Can also test by [docker rm]ing the creator service.
This should give a different error (timeout?)

assert_ is getting quite repetitive...
How about just

json_post '/create_custom_group', args={
  display_name:any_custom_display_name
}
it_succeeded # it_failed
group_exists(id_from_json_response, args[:display_name])

Is that too terse?
Feels like I want a new trailing character like ! or ? both !?
